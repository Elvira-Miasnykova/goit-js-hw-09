{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAYC,GACnBH,EAAAI,OAAOC,QAAQ,eAAsBC,OAAPH,G,CAGhC,SAASI,EAAWC,GAClBR,EAAAI,OAAOK,QAAQ,cAAoBH,OAANE,G,CAI/B,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,gBAAiCR,OAAjBK,EAAS,UAAcL,OAANM,IAGzCG,EAAO,aAA8BT,OAAjBK,EAAS,UAAcL,OAANM,EAAM,U,GAE5CA,E,IA3CQQ,SAASC,cAAc,SAC/BC,iBAAiB,UAMxB,SAAsBC,GACpBA,EAAEC,iBAQF,IANA,IAAMC,EAAeF,EAAEG,OAAOC,SAC1BC,EAAaC,OAAOJ,EAAab,MAAMkB,OACrCC,EAAYF,OAAOJ,EAAaO,KAAKF,OACrCG,EAAcJ,OAAOJ,EAAaS,OAAOJ,OAGtCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAErCzB,EAAcyB,EAAI,EAAGP,GAAYQ,KAAKlC,GAAamC,MAAM9B,GACzDqB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\n//let positionNumber = 0;\n//let delayPr = 0;\n//let step = 0;\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const formElements = e.target.elements;\n  let delayValue = Number(formElements.delay.value);\n  const stepValue = Number(formElements.step.value);\n  const amountValue = Number(formElements.amount.value);\n  //console.log(formElements); \n\n  for (let i = 0; i <= amountValue; i += 1) {\n    //positionNumber += 1;\n    createPromise(i + 1, delayValue).then(onFulfilled).catch(onRejected);\n    delayValue += stepValue;\n  }\n}\n\nfunction onFulfilled(result) {\n  Notify.success(`onFulfilled ${result}`);\n}\n\nfunction onRejected(error) {\n  Notify.failure(`onRejected ${error}`);\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`Successed at ${position} with ${delay}`);\n      } else {\n        // Reject\n        reject(`Denied at ${position} with ${delay} delay`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$onFulfilled","result","Notify","success","concat","$ce04d3a99e08e73b$var$onRejected","error","failure","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","formElements","target","elements","delayValue","Number","value","stepValue","step","amountValue","amount","i","then","catch"],"version":3,"file":"03-promises.3cdac3b9.js.map"}